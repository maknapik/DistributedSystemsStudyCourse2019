//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.2
//
// <auto-generated>
//
// Generated from file `Bank.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Bank;

public class AccountCreated implements java.lang.Cloneable,
                                       java.io.Serializable
{
    public String password;

    public AccountType userAccountType;

    public AccountCreated()
    {
        this.password = "";
        this.userAccountType = AccountType.STANDARD;
    }

    public AccountCreated(String password, AccountType userAccountType)
    {
        this.password = password;
        this.userAccountType = userAccountType;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        AccountCreated r = null;
        if(rhs instanceof AccountCreated)
        {
            r = (AccountCreated)rhs;
        }

        if(r != null)
        {
            if(this.password != r.password)
            {
                if(this.password == null || r.password == null || !this.password.equals(r.password))
                {
                    return false;
                }
            }
            if(this.userAccountType != r.userAccountType)
            {
                if(this.userAccountType == null || r.userAccountType == null || !this.userAccountType.equals(r.userAccountType))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::Bank::AccountCreated");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, password);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userAccountType);
        return h_;
    }

    public AccountCreated clone()
    {
        AccountCreated c = null;
        try
        {
            c = (AccountCreated)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.password);
        AccountType.ice_write(ostr, this.userAccountType);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.password = istr.readString();
        this.userAccountType = AccountType.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, AccountCreated v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public AccountCreated ice_read(com.zeroc.Ice.InputStream istr)
    {
        AccountCreated v = new AccountCreated();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<AccountCreated> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, AccountCreated v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<AccountCreated> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(AccountCreated.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final AccountCreated _nullMarshalValue = new AccountCreated();

    /** @hidden */
    public static final long serialVersionUID = -7312908453449148485L;
}
